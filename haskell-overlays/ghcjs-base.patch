diff --git a/Data/JSString.hs b/Data/JSString.hs
index 36fb370..6475cff 100644
--- a/Data/JSString.hs
+++ b/Data/JSString.hs
@@ -5,7 +5,7 @@
 {-| Manipulation of JavaScript strings, API and fusion implementation
     based on Data.Text by Tom Harper, Duncan Coutts, Bryan O'Sullivan e.a.
  -}
-module Data.JSString ( JSString
+module Data.JSString ( JSString(..)
 
                        -- * Creation and elimination
                      , pack
diff --git a/JavaScript/JSON/Types/Generic.hs b/JavaScript/JSON/Types/Generic.hs
index 7cb5abd..0847f55 100644
--- a/JavaScript/JSON/Types/Generic.hs
+++ b/JavaScript/JSON/Types/Generic.hs
@@ -228,7 +228,7 @@ instance (Selector s, GToJSON a) => RecordToPairs (S1 s a) where
     recordToPairs = fieldToPair
     {-# INLINE recordToPairs #-}
 
-instance (Selector s, ToJSON a) => RecordToPairs (S1 s (K1 i (Maybe a))) where
+instance {-# INCOHERENT #-} (Selector s, ToJSON a) => RecordToPairs (S1 s (K1 i (Maybe a))) where
     recordToPairs opts (M1 k1) | omitNothingFields opts
                                , K1 Nothing <- k1 = empty
     recordToPairs opts m1 = fieldToPair opts m1
@@ -503,7 +503,7 @@ instance (Selector s, GFromJSON a) => FromRecord (S1 s a) where
           label = fieldLabelModifier opts $ selName (undefined :: t s a p)
     {-# INLINE parseRecord #-}
 
-instance (Selector s, FromJSON a) => FromRecord (S1 s (K1 i (Maybe a))) where
+instance {-# INCOHERENT #-} (Selector s, FromJSON a) => FromRecord (S1 s (K1 i (Maybe a))) where
     parseRecord opts obj = (M1 . K1) <$> obj .:? pack label
         where
           label = fieldLabelModifier opts $
diff --git a/ghcjs-base.cabal b/ghcjs-base.cabal
index c3c654d..01eac53 100644
--- a/ghcjs-base.cabal
+++ b/ghcjs-base.cabal
@@ -133,7 +133,7 @@ library
                    scientific           >= 0.3  && < 0.4,
                    vector               >= 0.10 && < 0.13,
                    containers           >= 0.5  && < 0.7,
-                   time                 >= 1.5  && < 1.9,
+                   time                 >= 1.5  && < 1.10,
                    hashable             >= 1.2  && < 1.3,
                    unordered-containers >= 0.2  && < 0.3,
                    attoparsec           >= 0.11 && < 0.14,
diff --git a/jsbits/jsstring.js b/jsbits/jsstring.js
index e8a4ef9..7d51bd4 100644
--- a/jsbits/jsstring.js
+++ b/jsbits/jsstring.js
@@ -1135,16 +1135,15 @@ function h$jsstringReadValue64(str, start, negate) {
       h$jsstringLongs.push(goog.math.Long.fromInt(t));
     }
   }
-  var li = l-i;
-  if(li < 10 && !negate) {
+  if(l- i < 10 && !negate) {
     RETURN_UBX_TUP3(1, 0, parseInt(str.substr(i), 10));
   }
-  var r = goog.math.Long.fromInt(parseInt(str.substr(li,9),10));
-  li += 9;
-  while(li < l) {
-    r = r.multiply(h$jsstringLongs[Math.min(l-li-1,8)])
-         .add(goog.math.Long.fromInt(parseInt(str.substr(li,9), 10)));
-    li += 9;
+  var r = goog.math.Long.fromInt(parseInt(str.substr(i,9),10));
+  i += 9;
+  while(i < l) {
+    r = r.multiply(h$jsstringLongs[Math.min(l-i-1,8)])
+         .add(goog.math.Long.fromInt(parseInt(str.substr(i,9), 10)));
+    i += 9;
   }
   if(negate) {
     r = r.negate();
